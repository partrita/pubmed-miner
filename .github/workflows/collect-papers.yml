name: Essential Papers Collection

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      log_level:
        description: 'Log level for execution'
        required: false
        default: 'INFO'
        type: choice
        options:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
  push:
    branches: [ main ]
    paths:
      - 'pyproject.toml'
      - 'uv.lock'
      - 'config/**'
      - 'src/**'
      - 'automated_collection.py'
      - '.github/workflows/collect-papers.yml'

jobs:
  collect-papers:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    permissions:
      issues: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install uv and Enable Cache
      uses: astral-sh/setup-uv@v1
      with:
        # 내장 캐시 기능을 활성화하여 다음 실행 속도를 높입니다.
        enable-cache: true

    - name: Install dependencies
      run: |
        if [ -f "uv.lock" ]; then
          echo "Lockfile exists, attempting locked sync..."
          uv sync --locked --all-extras --dev || {
            echo "Locked sync failed, updating lockfile..."
            uv lock
            uv sync --all-extras --dev
          }
        else
          echo "No lockfile found, creating and syncing..."
          uv lock
          uv sync --all-extras --dev
        fi

    - name: Validate configuration
      run: uv run python scripts/validate_config.py
    
    - name: Create logs directory
      run: mkdir -p logs
    
    - name: Run automated collection
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBMED_EMAIL: ${{ secrets.PUBMED_EMAIL || 'partrita@gmail.com' }}
        LOG_LEVEL: ${{ github.event.inputs.log_level || 'INFO' }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        
      run: |
        echo "Starting automated essential papers collection..."
        echo "Date: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "Repository: $GITHUB_REPOSITORY"
        echo "Triggered by: $GITHUB_ACTOR"
        echo "Run ID: $GITHUB_RUN_ID"
        echo "Log level: $LOG_LEVEL"
        uv run python automated_collection.py
    
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: collection-logs-${{ github.run_id }}
        path: logs/
        retention-days: 30
    
    - name: Report results
      if: always()
      run: |
        echo "=== Workflow Summary ==="
        if [ -f "logs/automated_collection.log" ]; then
          echo "Log file contents:"
          tail -n 50 logs/automated_collection.log
        else
          echo "No log file found"
        fi
        echo "=== End Summary ==="
