[project]
name = "pubmed-miner"
version = "0.1.0"
description = "Automated PubMed paper collection and essential papers recommendation system"
authors = [
    {name = "taeyoon kim", email = "deepthought@postech.ac.kr"},
]
license = {text = "MIT"}
readme = "README.md"
keywords = ["pubmed", "papers", "research", "automation", "github-actions"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "biopython>=1.79",
    "pandas>=1.1.5",
    "requests>=2.27.1",
    "tqdm>=4.63.1",
    "PyYAML>=6.0",
    "PyGithub>=1.55",
    "python-dateutil>=2.8.0",
]
requires-python = ">=3.9"

[project.urls]
Homepage = "https://github.com/example/pubmed-miner"
Repository = "https://github.com/example/pubmed-miner"
Documentation = "https://github.com/example/pubmed-miner#readme"
"Bug Tracker" = "https://github.com/example/pubmed-miner/issues"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
]
dev = [
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "isort>=5.10.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.scripts]
pubmed-miner = "pubmed_miner.core:main"
collect-papers = "automated_collection:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
pubmed_miner = ["data/*.json", "data/*.csv"]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/pubmed_miner",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Type checking with mypy
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "Bio.*",
    "pandas.*",
    "tqdm.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["src/pubmed_miner"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
]
